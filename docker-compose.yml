services:
  postgres-gauss:
    image: postgres:16-alpine
    container_name: postgres-gauss
    volumes:
      - postgres-gauss:/var/lib/postgresql/data
    hostname: postgres-gauss
    networks:
      - gauss_network
    env_file: .env
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    restart: on-failure

  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management-alpine
    hostname: rabbitmq
    env_file: .env
    environment:
      - RABBITMQ_DEFAULT_VHOST=${RABBITMQ_DEFAULT_VHOST}
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_DEFAULT_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_DEFAULT_PASS}
    networks:
      - gauss_network
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq/mnesia/rabbit@rabbitmq
    restart: on-failure

  gauss3:
    image: gauss3
    depends_on:
      - postgres-gauss
      - rabbitmq
    hostname: gauss3
    container_name: gauss3
    command: /usr/local/bin/start-django.sh
    build:
      context: .
      dockerfile: ./Docker/Gauss/Dockerfile
    networks:
      - gauss_network
    volumes:
      - .:/var/www/python/gauss3/
      - static_volume:/var/www/python/gauss3/sitestatic
      - media_volume:/var/www/python/gauss3/media
    restart: on-failure

  celery_worker:
    build:
      context: .
      dockerfile: ./Docker/Gauss/Dockerfile
    image: gauss3_celery_worker
    command: /usr/local/bin/start-celeryworker.sh
    depends_on:
      - postgres-gauss
      - rabbitmq
    networks:
      - gauss_network
    volumes:
      - media_volume:/var/www/python/gauss3/media
      - .:/var/www/python/gauss3/
    deploy:
      mode: replicated
      replicas: 3 #change number depending number of istances
    restart: on-failure

  nginx:
    build:
      context: .
      dockerfile: ./Docker/Nginx/Dockerfile
      args:
        - USER=${USER_NGINX}
        - PASSWORD=${PASSWORD_NGINX}
    ports:
      - 80:80 # Gauss
      - 9091:9091 # Prometheus
    depends_on:
      - gauss3
    volumes:
      - static_volume:/var/www/python/gauss3/sitestatic
      - media_volume:/var/www/python/gauss3/media
    networks:
      - gauss_network
    restart: on-failure

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - gauss_network
    restart: on-failure

  cadvisor:
    image: google/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - gauss_network
    restart: on-failure

volumes:
  postgres-gauss:
  rabbitmq-data:
  static_volume:
  media_volume:


networks:
  gauss_network:
    name: gauss_network
